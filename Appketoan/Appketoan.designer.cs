#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Appketoan
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="vpro_dienmayhoangphu")]
	public partial class AppketoanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCONTRACT(CONTRACT instance);
    partial void UpdateCONTRACT(CONTRACT instance);
    partial void DeleteCONTRACT(CONTRACT instance);
    partial void InsertCONTRACT_DETAIL(CONTRACT_DETAIL instance);
    partial void UpdateCONTRACT_DETAIL(CONTRACT_DETAIL instance);
    partial void DeleteCONTRACT_DETAIL(CONTRACT_DETAIL instance);
    partial void InsertCONTRACT_HISTORY(CONTRACT_HISTORY instance);
    partial void UpdateCONTRACT_HISTORY(CONTRACT_HISTORY instance);
    partial void DeleteCONTRACT_HISTORY(CONTRACT_HISTORY instance);
    partial void InsertBILL(BILL instance);
    partial void UpdateBILL(BILL instance);
    partial void DeleteBILL(BILL instance);
    partial void InsertCONTRACT_HISTORYWEEK(CONTRACT_HISTORYWEEK instance);
    partial void UpdateCONTRACT_HISTORYWEEK(CONTRACT_HISTORYWEEK instance);
    partial void DeleteCONTRACT_HISTORYWEEK(CONTRACT_HISTORYWEEK instance);
    partial void InsertCUSTOMER(CUSTOMER instance);
    partial void UpdateCUSTOMER(CUSTOMER instance);
    partial void DeleteCUSTOMER(CUSTOMER instance);
    partial void InsertCUSTOMER_HISTORY(CUSTOMER_HISTORY instance);
    partial void UpdateCUSTOMER_HISTORY(CUSTOMER_HISTORY instance);
    partial void DeleteCUSTOMER_HISTORY(CUSTOMER_HISTORY instance);
    partial void InsertCUSTOMER_NODELI(CUSTOMER_NODELI instance);
    partial void UpdateCUSTOMER_NODELI(CUSTOMER_NODELI instance);
    partial void DeleteCUSTOMER_NODELI(CUSTOMER_NODELI instance);
    partial void InsertEMPLOYER(EMPLOYER instance);
    partial void UpdateEMPLOYER(EMPLOYER instance);
    partial void DeleteEMPLOYER(EMPLOYER instance);
    partial void InsertGROUP(GROUP instance);
    partial void UpdateGROUP(GROUP instance);
    partial void DeleteGROUP(GROUP instance);
    partial void InsertGROUP_MENU(GROUP_MENU instance);
    partial void UpdateGROUP_MENU(GROUP_MENU instance);
    partial void DeleteGROUP_MENU(GROUP_MENU instance);
    partial void InsertMENU_PARENT(MENU_PARENT instance);
    partial void UpdateMENU_PARENT(MENU_PARENT instance);
    partial void DeleteMENU_PARENT(MENU_PARENT instance);
    partial void InsertUSER(USER instance);
    partial void UpdateUSER(USER instance);
    partial void DeleteUSER(USER instance);
    #endregion
		
		public AppketoanDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["vpro_dienmayhoangphuConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AppketoanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppketoanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppketoanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AppketoanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CONTRACT> CONTRACTs
		{
			get
			{
				return this.GetTable<CONTRACT>();
			}
		}
		
		public System.Data.Linq.Table<CONTRACT_DETAIL> CONTRACT_DETAILs
		{
			get
			{
				return this.GetTable<CONTRACT_DETAIL>();
			}
		}
		
		public System.Data.Linq.Table<CONTRACT_HISTORY> CONTRACT_HISTORies
		{
			get
			{
				return this.GetTable<CONTRACT_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<BILL> BILLs
		{
			get
			{
				return this.GetTable<BILL>();
			}
		}
		
		public System.Data.Linq.Table<CONTRACT_HISTORYWEEK> CONTRACT_HISTORYWEEKs
		{
			get
			{
				return this.GetTable<CONTRACT_HISTORYWEEK>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER> CUSTOMERs
		{
			get
			{
				return this.GetTable<CUSTOMER>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER_HISTORY> CUSTOMER_HISTORies
		{
			get
			{
				return this.GetTable<CUSTOMER_HISTORY>();
			}
		}
		
		public System.Data.Linq.Table<CUSTOMER_NODELI> CUSTOMER_NODELIs
		{
			get
			{
				return this.GetTable<CUSTOMER_NODELI>();
			}
		}
		
		public System.Data.Linq.Table<EMPLOYER> EMPLOYERs
		{
			get
			{
				return this.GetTable<EMPLOYER>();
			}
		}
		
		public System.Data.Linq.Table<GROUP> GROUPs
		{
			get
			{
				return this.GetTable<GROUP>();
			}
		}
		
		public System.Data.Linq.Table<GROUP_MENU> GROUP_MENUs
		{
			get
			{
				return this.GetTable<GROUP_MENU>();
			}
		}
		
		public System.Data.Linq.Table<MENU_PARENT> MENU_PARENTs
		{
			get
			{
				return this.GetTable<MENU_PARENT>();
			}
		}
		
		public System.Data.Linq.Table<USER> USERs
		{
			get
			{
				return this.GetTable<USER>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.converdate", IsComposable=true)]
		public System.Nullable<int> converdate([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallDateTime")] System.Nullable<System.DateTime> datetimeval, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="SmallDateTime")] System.Nullable<System.DateTime> datetimenow)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), datetimeval, datetimenow).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.TEST1")]
		public int TEST1()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTRACT")]
	public partial class CONTRACT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_CUS;
		
		private string _CONT_NO;
		
		private string _CONT_PRODUCT_NAME;
		
		private System.Nullable<decimal> _CONT_PRODUCT_PRICE;
		
		private System.Nullable<decimal> _CONT_TOTAL_PRICE;
		
		private System.Nullable<decimal> _CONT_PREPAY_PRICE;
		
		private System.Nullable<decimal> _CONT_DEBT_PRICE;
		
		private System.Nullable<int> _CONT_TYPE;
		
		private int _CONT_STATUS;
		
		private System.Nullable<System.DateTime> _CONT_DATE;
		
		private System.Nullable<decimal> _CONT_LOST_PRICE;
		
		private string _CONT_NOTE;
		
		private string _CONT_NOTE_TRACK;
		
		private System.Nullable<System.DateTime> _CONT_DELI_DATE;
		
		private System.Nullable<decimal> _CONT_DELI_PRICE;
		
		private System.Nullable<decimal> _CONT_WEEK_PRICE;
		
		private System.Nullable<int> _CONT_WEEK_COUNT;
		
		private System.Nullable<int> _USER_ID;
		
		private System.Nullable<int> _BILL_STATUS;
		
		private System.Nullable<System.DateTime> _DATE_STATUS;
		
		private System.Nullable<bool> _IS_DELETE;
		
		private string _EMP_BH;
		
		private string _EMP_XM;
		
		private string _EMP_GH;
		
		private System.Nullable<int> _EMP_TN;
		
		private string _CUS_GT;
		
		private string _CONT_NOTE_DELI;
		
		private string _CONT_NOTE_XM;
		
		private EntitySet<CONTRACT_DETAIL> _CONTRACT_DETAILs;
		
		private EntitySet<CONTRACT_HISTORY> _CONTRACT_HISTORies;
		
		private EntitySet<BILL> _BILLs;
		
		private EntitySet<CONTRACT_HISTORYWEEK> _CONTRACT_HISTORYWEEKs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_CUSChanging(System.Nullable<int> value);
    partial void OnID_CUSChanged();
    partial void OnCONT_NOChanging(string value);
    partial void OnCONT_NOChanged();
    partial void OnCONT_PRODUCT_NAMEChanging(string value);
    partial void OnCONT_PRODUCT_NAMEChanged();
    partial void OnCONT_PRODUCT_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONT_PRODUCT_PRICEChanged();
    partial void OnCONT_TOTAL_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONT_TOTAL_PRICEChanged();
    partial void OnCONT_PREPAY_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONT_PREPAY_PRICEChanged();
    partial void OnCONT_DEBT_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONT_DEBT_PRICEChanged();
    partial void OnCONT_TYPEChanging(System.Nullable<int> value);
    partial void OnCONT_TYPEChanged();
    partial void OnCONT_STATUSChanging(int value);
    partial void OnCONT_STATUSChanged();
    partial void OnCONT_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCONT_DATEChanged();
    partial void OnCONT_LOST_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONT_LOST_PRICEChanged();
    partial void OnCONT_NOTEChanging(string value);
    partial void OnCONT_NOTEChanged();
    partial void OnCONT_NOTE_TRACKChanging(string value);
    partial void OnCONT_NOTE_TRACKChanged();
    partial void OnCONT_DELI_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCONT_DELI_DATEChanged();
    partial void OnCONT_DELI_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONT_DELI_PRICEChanged();
    partial void OnCONT_WEEK_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONT_WEEK_PRICEChanged();
    partial void OnCONT_WEEK_COUNTChanging(System.Nullable<int> value);
    partial void OnCONT_WEEK_COUNTChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    partial void OnBILL_STATUSChanging(System.Nullable<int> value);
    partial void OnBILL_STATUSChanged();
    partial void OnDATE_STATUSChanging(System.Nullable<System.DateTime> value);
    partial void OnDATE_STATUSChanged();
    partial void OnIS_DELETEChanging(System.Nullable<bool> value);
    partial void OnIS_DELETEChanged();
    partial void OnEMP_BHChanging(string value);
    partial void OnEMP_BHChanged();
    partial void OnEMP_XMChanging(string value);
    partial void OnEMP_XMChanged();
    partial void OnEMP_GHChanging(string value);
    partial void OnEMP_GHChanged();
    partial void OnEMP_TNChanging(System.Nullable<int> value);
    partial void OnEMP_TNChanged();
    partial void OnCUS_GTChanging(string value);
    partial void OnCUS_GTChanged();
    partial void OnCONT_NOTE_DELIChanging(string value);
    partial void OnCONT_NOTE_DELIChanged();
    partial void OnCONT_NOTE_XMChanging(string value);
    partial void OnCONT_NOTE_XMChanged();
    #endregion
		
		public CONTRACT()
		{
			this._CONTRACT_DETAILs = new EntitySet<CONTRACT_DETAIL>(new Action<CONTRACT_DETAIL>(this.attach_CONTRACT_DETAILs), new Action<CONTRACT_DETAIL>(this.detach_CONTRACT_DETAILs));
			this._CONTRACT_HISTORies = new EntitySet<CONTRACT_HISTORY>(new Action<CONTRACT_HISTORY>(this.attach_CONTRACT_HISTORies), new Action<CONTRACT_HISTORY>(this.detach_CONTRACT_HISTORies));
			this._BILLs = new EntitySet<BILL>(new Action<BILL>(this.attach_BILLs), new Action<BILL>(this.detach_BILLs));
			this._CONTRACT_HISTORYWEEKs = new EntitySet<CONTRACT_HISTORYWEEK>(new Action<CONTRACT_HISTORYWEEK>(this.attach_CONTRACT_HISTORYWEEKs), new Action<CONTRACT_HISTORYWEEK>(this.detach_CONTRACT_HISTORYWEEKs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUS", DbType="Int")]
		public System.Nullable<int> ID_CUS
		{
			get
			{
				return this._ID_CUS;
			}
			set
			{
				if ((this._ID_CUS != value))
				{
					this.OnID_CUSChanging(value);
					this.SendPropertyChanging();
					this._ID_CUS = value;
					this.SendPropertyChanged("ID_CUS");
					this.OnID_CUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_NO", DbType="NVarChar(150)")]
		public string CONT_NO
		{
			get
			{
				return this._CONT_NO;
			}
			set
			{
				if ((this._CONT_NO != value))
				{
					this.OnCONT_NOChanging(value);
					this.SendPropertyChanging();
					this._CONT_NO = value;
					this.SendPropertyChanged("CONT_NO");
					this.OnCONT_NOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_PRODUCT_NAME", DbType="NVarChar(550)")]
		public string CONT_PRODUCT_NAME
		{
			get
			{
				return this._CONT_PRODUCT_NAME;
			}
			set
			{
				if ((this._CONT_PRODUCT_NAME != value))
				{
					this.OnCONT_PRODUCT_NAMEChanging(value);
					this.SendPropertyChanging();
					this._CONT_PRODUCT_NAME = value;
					this.SendPropertyChanged("CONT_PRODUCT_NAME");
					this.OnCONT_PRODUCT_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_PRODUCT_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONT_PRODUCT_PRICE
		{
			get
			{
				return this._CONT_PRODUCT_PRICE;
			}
			set
			{
				if ((this._CONT_PRODUCT_PRICE != value))
				{
					this.OnCONT_PRODUCT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONT_PRODUCT_PRICE = value;
					this.SendPropertyChanged("CONT_PRODUCT_PRICE");
					this.OnCONT_PRODUCT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_TOTAL_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONT_TOTAL_PRICE
		{
			get
			{
				return this._CONT_TOTAL_PRICE;
			}
			set
			{
				if ((this._CONT_TOTAL_PRICE != value))
				{
					this.OnCONT_TOTAL_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONT_TOTAL_PRICE = value;
					this.SendPropertyChanged("CONT_TOTAL_PRICE");
					this.OnCONT_TOTAL_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_PREPAY_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONT_PREPAY_PRICE
		{
			get
			{
				return this._CONT_PREPAY_PRICE;
			}
			set
			{
				if ((this._CONT_PREPAY_PRICE != value))
				{
					this.OnCONT_PREPAY_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONT_PREPAY_PRICE = value;
					this.SendPropertyChanged("CONT_PREPAY_PRICE");
					this.OnCONT_PREPAY_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_DEBT_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONT_DEBT_PRICE
		{
			get
			{
				return this._CONT_DEBT_PRICE;
			}
			set
			{
				if ((this._CONT_DEBT_PRICE != value))
				{
					this.OnCONT_DEBT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONT_DEBT_PRICE = value;
					this.SendPropertyChanged("CONT_DEBT_PRICE");
					this.OnCONT_DEBT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_TYPE", DbType="Int")]
		public System.Nullable<int> CONT_TYPE
		{
			get
			{
				return this._CONT_TYPE;
			}
			set
			{
				if ((this._CONT_TYPE != value))
				{
					this.OnCONT_TYPEChanging(value);
					this.SendPropertyChanging();
					this._CONT_TYPE = value;
					this.SendPropertyChanged("CONT_TYPE");
					this.OnCONT_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_STATUS", DbType="Int NOT NULL")]
		public int CONT_STATUS
		{
			get
			{
				return this._CONT_STATUS;
			}
			set
			{
				if ((this._CONT_STATUS != value))
				{
					this.OnCONT_STATUSChanging(value);
					this.SendPropertyChanging();
					this._CONT_STATUS = value;
					this.SendPropertyChanged("CONT_STATUS");
					this.OnCONT_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CONT_DATE
		{
			get
			{
				return this._CONT_DATE;
			}
			set
			{
				if ((this._CONT_DATE != value))
				{
					this.OnCONT_DATEChanging(value);
					this.SendPropertyChanging();
					this._CONT_DATE = value;
					this.SendPropertyChanged("CONT_DATE");
					this.OnCONT_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_LOST_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONT_LOST_PRICE
		{
			get
			{
				return this._CONT_LOST_PRICE;
			}
			set
			{
				if ((this._CONT_LOST_PRICE != value))
				{
					this.OnCONT_LOST_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONT_LOST_PRICE = value;
					this.SendPropertyChanged("CONT_LOST_PRICE");
					this.OnCONT_LOST_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_NOTE", DbType="NVarChar(550)")]
		public string CONT_NOTE
		{
			get
			{
				return this._CONT_NOTE;
			}
			set
			{
				if ((this._CONT_NOTE != value))
				{
					this.OnCONT_NOTEChanging(value);
					this.SendPropertyChanging();
					this._CONT_NOTE = value;
					this.SendPropertyChanged("CONT_NOTE");
					this.OnCONT_NOTEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_NOTE_TRACK", DbType="NVarChar(550)")]
		public string CONT_NOTE_TRACK
		{
			get
			{
				return this._CONT_NOTE_TRACK;
			}
			set
			{
				if ((this._CONT_NOTE_TRACK != value))
				{
					this.OnCONT_NOTE_TRACKChanging(value);
					this.SendPropertyChanging();
					this._CONT_NOTE_TRACK = value;
					this.SendPropertyChanged("CONT_NOTE_TRACK");
					this.OnCONT_NOTE_TRACKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_DELI_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CONT_DELI_DATE
		{
			get
			{
				return this._CONT_DELI_DATE;
			}
			set
			{
				if ((this._CONT_DELI_DATE != value))
				{
					this.OnCONT_DELI_DATEChanging(value);
					this.SendPropertyChanging();
					this._CONT_DELI_DATE = value;
					this.SendPropertyChanged("CONT_DELI_DATE");
					this.OnCONT_DELI_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_DELI_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONT_DELI_PRICE
		{
			get
			{
				return this._CONT_DELI_PRICE;
			}
			set
			{
				if ((this._CONT_DELI_PRICE != value))
				{
					this.OnCONT_DELI_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONT_DELI_PRICE = value;
					this.SendPropertyChanged("CONT_DELI_PRICE");
					this.OnCONT_DELI_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_WEEK_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONT_WEEK_PRICE
		{
			get
			{
				return this._CONT_WEEK_PRICE;
			}
			set
			{
				if ((this._CONT_WEEK_PRICE != value))
				{
					this.OnCONT_WEEK_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONT_WEEK_PRICE = value;
					this.SendPropertyChanged("CONT_WEEK_PRICE");
					this.OnCONT_WEEK_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_WEEK_COUNT", DbType="Int")]
		public System.Nullable<int> CONT_WEEK_COUNT
		{
			get
			{
				return this._CONT_WEEK_COUNT;
			}
			set
			{
				if ((this._CONT_WEEK_COUNT != value))
				{
					this.OnCONT_WEEK_COUNTChanging(value);
					this.SendPropertyChanging();
					this._CONT_WEEK_COUNT = value;
					this.SendPropertyChanged("CONT_WEEK_COUNT");
					this.OnCONT_WEEK_COUNTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BILL_STATUS", DbType="Int")]
		public System.Nullable<int> BILL_STATUS
		{
			get
			{
				return this._BILL_STATUS;
			}
			set
			{
				if ((this._BILL_STATUS != value))
				{
					this.OnBILL_STATUSChanging(value);
					this.SendPropertyChanging();
					this._BILL_STATUS = value;
					this.SendPropertyChanged("BILL_STATUS");
					this.OnBILL_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATE_STATUS", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DATE_STATUS
		{
			get
			{
				return this._DATE_STATUS;
			}
			set
			{
				if ((this._DATE_STATUS != value))
				{
					this.OnDATE_STATUSChanging(value);
					this.SendPropertyChanging();
					this._DATE_STATUS = value;
					this.SendPropertyChanged("DATE_STATUS");
					this.OnDATE_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IS_DELETE", DbType="Bit")]
		public System.Nullable<bool> IS_DELETE
		{
			get
			{
				return this._IS_DELETE;
			}
			set
			{
				if ((this._IS_DELETE != value))
				{
					this.OnIS_DELETEChanging(value);
					this.SendPropertyChanging();
					this._IS_DELETE = value;
					this.SendPropertyChanged("IS_DELETE");
					this.OnIS_DELETEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_BH", DbType="VarChar(50)")]
		public string EMP_BH
		{
			get
			{
				return this._EMP_BH;
			}
			set
			{
				if ((this._EMP_BH != value))
				{
					this.OnEMP_BHChanging(value);
					this.SendPropertyChanging();
					this._EMP_BH = value;
					this.SendPropertyChanged("EMP_BH");
					this.OnEMP_BHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_XM", DbType="VarChar(50)")]
		public string EMP_XM
		{
			get
			{
				return this._EMP_XM;
			}
			set
			{
				if ((this._EMP_XM != value))
				{
					this.OnEMP_XMChanging(value);
					this.SendPropertyChanging();
					this._EMP_XM = value;
					this.SendPropertyChanged("EMP_XM");
					this.OnEMP_XMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_GH", DbType="VarChar(50)")]
		public string EMP_GH
		{
			get
			{
				return this._EMP_GH;
			}
			set
			{
				if ((this._EMP_GH != value))
				{
					this.OnEMP_GHChanging(value);
					this.SendPropertyChanging();
					this._EMP_GH = value;
					this.SendPropertyChanged("EMP_GH");
					this.OnEMP_GHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_TN", DbType="Int")]
		public System.Nullable<int> EMP_TN
		{
			get
			{
				return this._EMP_TN;
			}
			set
			{
				if ((this._EMP_TN != value))
				{
					this.OnEMP_TNChanging(value);
					this.SendPropertyChanging();
					this._EMP_TN = value;
					this.SendPropertyChanged("EMP_TN");
					this.OnEMP_TNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_GT", DbType="NVarChar(550)")]
		public string CUS_GT
		{
			get
			{
				return this._CUS_GT;
			}
			set
			{
				if ((this._CUS_GT != value))
				{
					this.OnCUS_GTChanging(value);
					this.SendPropertyChanging();
					this._CUS_GT = value;
					this.SendPropertyChanged("CUS_GT");
					this.OnCUS_GTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_NOTE_DELI", DbType="NVarChar(550)")]
		public string CONT_NOTE_DELI
		{
			get
			{
				return this._CONT_NOTE_DELI;
			}
			set
			{
				if ((this._CONT_NOTE_DELI != value))
				{
					this.OnCONT_NOTE_DELIChanging(value);
					this.SendPropertyChanging();
					this._CONT_NOTE_DELI = value;
					this.SendPropertyChanged("CONT_NOTE_DELI");
					this.OnCONT_NOTE_DELIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONT_NOTE_XM", DbType="NVarChar(1000)")]
		public string CONT_NOTE_XM
		{
			get
			{
				return this._CONT_NOTE_XM;
			}
			set
			{
				if ((this._CONT_NOTE_XM != value))
				{
					this.OnCONT_NOTE_XMChanging(value);
					this.SendPropertyChanging();
					this._CONT_NOTE_XM = value;
					this.SendPropertyChanged("CONT_NOTE_XM");
					this.OnCONT_NOTE_XMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_CONTRACT_DETAIL", Storage="_CONTRACT_DETAILs", ThisKey="ID", OtherKey="ID_CONT")]
		public EntitySet<CONTRACT_DETAIL> CONTRACT_DETAILs
		{
			get
			{
				return this._CONTRACT_DETAILs;
			}
			set
			{
				this._CONTRACT_DETAILs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_CONTRACT_HISTORY", Storage="_CONTRACT_HISTORies", ThisKey="ID", OtherKey="ID_CONT")]
		public EntitySet<CONTRACT_HISTORY> CONTRACT_HISTORies
		{
			get
			{
				return this._CONTRACT_HISTORies;
			}
			set
			{
				this._CONTRACT_HISTORies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_BILL", Storage="_BILLs", ThisKey="ID", OtherKey="ID_CONT")]
		public EntitySet<BILL> BILLs
		{
			get
			{
				return this._BILLs;
			}
			set
			{
				this._BILLs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_CONTRACT_HISTORYWEEK", Storage="_CONTRACT_HISTORYWEEKs", ThisKey="ID", OtherKey="ID_CONT")]
		public EntitySet<CONTRACT_HISTORYWEEK> CONTRACT_HISTORYWEEKs
		{
			get
			{
				return this._CONTRACT_HISTORYWEEKs;
			}
			set
			{
				this._CONTRACT_HISTORYWEEKs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTRACT_DETAILs(CONTRACT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = this;
		}
		
		private void detach_CONTRACT_DETAILs(CONTRACT_DETAIL entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = null;
		}
		
		private void attach_CONTRACT_HISTORies(CONTRACT_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = this;
		}
		
		private void detach_CONTRACT_HISTORies(CONTRACT_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = null;
		}
		
		private void attach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = this;
		}
		
		private void detach_BILLs(BILL entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = null;
		}
		
		private void attach_CONTRACT_HISTORYWEEKs(CONTRACT_HISTORYWEEK entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = this;
		}
		
		private void detach_CONTRACT_HISTORYWEEKs(CONTRACT_HISTORYWEEK entity)
		{
			this.SendPropertyChanging();
			entity.CONTRACT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTRACT_DETAIL")]
	public partial class CONTRACT_DETAIL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_CONT;
		
		private System.Nullable<System.DateTime> _CONTD_DATE_THU;
		
		private System.Nullable<System.DateTime> _CONTD_DATE_THU_TT;
		
		private System.Nullable<decimal> _CONTD_PAY_PRICE;
		
		private System.Nullable<decimal> _CONTD_DEBT_PRICE;
		
		private System.Nullable<decimal> _CONTD_DEBT_PRICE_TT;
		
		private EntityRef<CONTRACT> _CONTRACT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_CONTChanging(System.Nullable<int> value);
    partial void OnID_CONTChanged();
    partial void OnCONTD_DATE_THUChanging(System.Nullable<System.DateTime> value);
    partial void OnCONTD_DATE_THUChanged();
    partial void OnCONTD_DATE_THU_TTChanging(System.Nullable<System.DateTime> value);
    partial void OnCONTD_DATE_THU_TTChanged();
    partial void OnCONTD_PAY_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONTD_PAY_PRICEChanged();
    partial void OnCONTD_DEBT_PRICEChanging(System.Nullable<decimal> value);
    partial void OnCONTD_DEBT_PRICEChanged();
    partial void OnCONTD_DEBT_PRICE_TTChanging(System.Nullable<decimal> value);
    partial void OnCONTD_DEBT_PRICE_TTChanged();
    #endregion
		
		public CONTRACT_DETAIL()
		{
			this._CONTRACT = default(EntityRef<CONTRACT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CONT", DbType="Int")]
		public System.Nullable<int> ID_CONT
		{
			get
			{
				return this._ID_CONT;
			}
			set
			{
				if ((this._ID_CONT != value))
				{
					if (this._CONTRACT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CONTChanging(value);
					this.SendPropertyChanging();
					this._ID_CONT = value;
					this.SendPropertyChanged("ID_CONT");
					this.OnID_CONTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTD_DATE_THU", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CONTD_DATE_THU
		{
			get
			{
				return this._CONTD_DATE_THU;
			}
			set
			{
				if ((this._CONTD_DATE_THU != value))
				{
					this.OnCONTD_DATE_THUChanging(value);
					this.SendPropertyChanging();
					this._CONTD_DATE_THU = value;
					this.SendPropertyChanged("CONTD_DATE_THU");
					this.OnCONTD_DATE_THUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTD_DATE_THU_TT", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CONTD_DATE_THU_TT
		{
			get
			{
				return this._CONTD_DATE_THU_TT;
			}
			set
			{
				if ((this._CONTD_DATE_THU_TT != value))
				{
					this.OnCONTD_DATE_THU_TTChanging(value);
					this.SendPropertyChanging();
					this._CONTD_DATE_THU_TT = value;
					this.SendPropertyChanged("CONTD_DATE_THU_TT");
					this.OnCONTD_DATE_THU_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTD_PAY_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONTD_PAY_PRICE
		{
			get
			{
				return this._CONTD_PAY_PRICE;
			}
			set
			{
				if ((this._CONTD_PAY_PRICE != value))
				{
					this.OnCONTD_PAY_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONTD_PAY_PRICE = value;
					this.SendPropertyChanged("CONTD_PAY_PRICE");
					this.OnCONTD_PAY_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTD_DEBT_PRICE", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONTD_DEBT_PRICE
		{
			get
			{
				return this._CONTD_DEBT_PRICE;
			}
			set
			{
				if ((this._CONTD_DEBT_PRICE != value))
				{
					this.OnCONTD_DEBT_PRICEChanging(value);
					this.SendPropertyChanging();
					this._CONTD_DEBT_PRICE = value;
					this.SendPropertyChanged("CONTD_DEBT_PRICE");
					this.OnCONTD_DEBT_PRICEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTD_DEBT_PRICE_TT", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> CONTD_DEBT_PRICE_TT
		{
			get
			{
				return this._CONTD_DEBT_PRICE_TT;
			}
			set
			{
				if ((this._CONTD_DEBT_PRICE_TT != value))
				{
					this.OnCONTD_DEBT_PRICE_TTChanging(value);
					this.SendPropertyChanging();
					this._CONTD_DEBT_PRICE_TT = value;
					this.SendPropertyChanged("CONTD_DEBT_PRICE_TT");
					this.OnCONTD_DEBT_PRICE_TTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_CONTRACT_DETAIL", Storage="_CONTRACT", ThisKey="ID_CONT", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONTRACT CONTRACT
		{
			get
			{
				return this._CONTRACT.Entity;
			}
			set
			{
				CONTRACT previousValue = this._CONTRACT.Entity;
				if (((previousValue != value) 
							|| (this._CONTRACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTRACT.Entity = null;
						previousValue.CONTRACT_DETAILs.Remove(this);
					}
					this._CONTRACT.Entity = value;
					if ((value != null))
					{
						value.CONTRACT_DETAILs.Add(this);
						this._ID_CONT = value.ID;
					}
					else
					{
						this._ID_CONT = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTRACT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTRACT_HISTORY")]
	public partial class CONTRACT_HISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_CONT;
		
		private System.Nullable<int> _CONTHIS_TYPE;
		
		private System.Nullable<System.DateTime> _CONTHIS_TRANSFER_DATE;
		
		private System.Nullable<int> _USER_ID;
		
		private EntityRef<CONTRACT> _CONTRACT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_CONTChanging(System.Nullable<int> value);
    partial void OnID_CONTChanged();
    partial void OnCONTHIS_TYPEChanging(System.Nullable<int> value);
    partial void OnCONTHIS_TYPEChanged();
    partial void OnCONTHIS_TRANSFER_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCONTHIS_TRANSFER_DATEChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public CONTRACT_HISTORY()
		{
			this._CONTRACT = default(EntityRef<CONTRACT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CONT", DbType="Int")]
		public System.Nullable<int> ID_CONT
		{
			get
			{
				return this._ID_CONT;
			}
			set
			{
				if ((this._ID_CONT != value))
				{
					if (this._CONTRACT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CONTChanging(value);
					this.SendPropertyChanging();
					this._ID_CONT = value;
					this.SendPropertyChanged("ID_CONT");
					this.OnID_CONTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTHIS_TYPE", DbType="Int")]
		public System.Nullable<int> CONTHIS_TYPE
		{
			get
			{
				return this._CONTHIS_TYPE;
			}
			set
			{
				if ((this._CONTHIS_TYPE != value))
				{
					this.OnCONTHIS_TYPEChanging(value);
					this.SendPropertyChanging();
					this._CONTHIS_TYPE = value;
					this.SendPropertyChanged("CONTHIS_TYPE");
					this.OnCONTHIS_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTHIS_TRANSFER_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CONTHIS_TRANSFER_DATE
		{
			get
			{
				return this._CONTHIS_TRANSFER_DATE;
			}
			set
			{
				if ((this._CONTHIS_TRANSFER_DATE != value))
				{
					this.OnCONTHIS_TRANSFER_DATEChanging(value);
					this.SendPropertyChanging();
					this._CONTHIS_TRANSFER_DATE = value;
					this.SendPropertyChanged("CONTHIS_TRANSFER_DATE");
					this.OnCONTHIS_TRANSFER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_CONTRACT_HISTORY", Storage="_CONTRACT", ThisKey="ID_CONT", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONTRACT CONTRACT
		{
			get
			{
				return this._CONTRACT.Entity;
			}
			set
			{
				CONTRACT previousValue = this._CONTRACT.Entity;
				if (((previousValue != value) 
							|| (this._CONTRACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTRACT.Entity = null;
						previousValue.CONTRACT_HISTORies.Remove(this);
					}
					this._CONTRACT.Entity = value;
					if ((value != null))
					{
						value.CONTRACT_HISTORies.Add(this);
						this._ID_CONT = value.ID;
					}
					else
					{
						this._ID_CONT = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTRACT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BILL")]
	public partial class BILL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_CONT;
		
		private System.Nullable<int> _BILL_STATUS;
		
		private System.Nullable<int> _ID_EMPLOY;
		
		private System.Nullable<System.DateTime> _BILL_DELI_DATE;
		
		private System.Nullable<System.DateTime> _BILLL_RECEIVER_DATE;
		
		private System.Nullable<System.DateTime> _CONTD_DATE_THU;
		
		private EntityRef<CONTRACT> _CONTRACT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_CONTChanging(System.Nullable<int> value);
    partial void OnID_CONTChanged();
    partial void OnBILL_STATUSChanging(System.Nullable<int> value);
    partial void OnBILL_STATUSChanged();
    partial void OnID_EMPLOYChanging(System.Nullable<int> value);
    partial void OnID_EMPLOYChanged();
    partial void OnBILL_DELI_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBILL_DELI_DATEChanged();
    partial void OnBILLL_RECEIVER_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnBILLL_RECEIVER_DATEChanged();
    partial void OnCONTD_DATE_THUChanging(System.Nullable<System.DateTime> value);
    partial void OnCONTD_DATE_THUChanged();
    #endregion
		
		public BILL()
		{
			this._CONTRACT = default(EntityRef<CONTRACT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CONT", DbType="Int")]
		public System.Nullable<int> ID_CONT
		{
			get
			{
				return this._ID_CONT;
			}
			set
			{
				if ((this._ID_CONT != value))
				{
					if (this._CONTRACT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CONTChanging(value);
					this.SendPropertyChanging();
					this._ID_CONT = value;
					this.SendPropertyChanged("ID_CONT");
					this.OnID_CONTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BILL_STATUS", DbType="Int")]
		public System.Nullable<int> BILL_STATUS
		{
			get
			{
				return this._BILL_STATUS;
			}
			set
			{
				if ((this._BILL_STATUS != value))
				{
					this.OnBILL_STATUSChanging(value);
					this.SendPropertyChanging();
					this._BILL_STATUS = value;
					this.SendPropertyChanged("BILL_STATUS");
					this.OnBILL_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_EMPLOY", DbType="Int")]
		public System.Nullable<int> ID_EMPLOY
		{
			get
			{
				return this._ID_EMPLOY;
			}
			set
			{
				if ((this._ID_EMPLOY != value))
				{
					this.OnID_EMPLOYChanging(value);
					this.SendPropertyChanging();
					this._ID_EMPLOY = value;
					this.SendPropertyChanged("ID_EMPLOY");
					this.OnID_EMPLOYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BILL_DELI_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> BILL_DELI_DATE
		{
			get
			{
				return this._BILL_DELI_DATE;
			}
			set
			{
				if ((this._BILL_DELI_DATE != value))
				{
					this.OnBILL_DELI_DATEChanging(value);
					this.SendPropertyChanging();
					this._BILL_DELI_DATE = value;
					this.SendPropertyChanged("BILL_DELI_DATE");
					this.OnBILL_DELI_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BILLL_RECEIVER_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> BILLL_RECEIVER_DATE
		{
			get
			{
				return this._BILLL_RECEIVER_DATE;
			}
			set
			{
				if ((this._BILLL_RECEIVER_DATE != value))
				{
					this.OnBILLL_RECEIVER_DATEChanging(value);
					this.SendPropertyChanging();
					this._BILLL_RECEIVER_DATE = value;
					this.SendPropertyChanged("BILLL_RECEIVER_DATE");
					this.OnBILLL_RECEIVER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTD_DATE_THU", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CONTD_DATE_THU
		{
			get
			{
				return this._CONTD_DATE_THU;
			}
			set
			{
				if ((this._CONTD_DATE_THU != value))
				{
					this.OnCONTD_DATE_THUChanging(value);
					this.SendPropertyChanging();
					this._CONTD_DATE_THU = value;
					this.SendPropertyChanged("CONTD_DATE_THU");
					this.OnCONTD_DATE_THUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_BILL", Storage="_CONTRACT", ThisKey="ID_CONT", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONTRACT CONTRACT
		{
			get
			{
				return this._CONTRACT.Entity;
			}
			set
			{
				CONTRACT previousValue = this._CONTRACT.Entity;
				if (((previousValue != value) 
							|| (this._CONTRACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTRACT.Entity = null;
						previousValue.BILLs.Remove(this);
					}
					this._CONTRACT.Entity = value;
					if ((value != null))
					{
						value.BILLs.Add(this);
						this._ID_CONT = value.ID;
					}
					else
					{
						this._ID_CONT = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTRACT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTRACT_HISTORYWEEK")]
	public partial class CONTRACT_HISTORYWEEK : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ID_CONT;
		
		private System.Nullable<int> _CONTHIS_WEEK;
		
		private System.Nullable<System.DateTime> _CONTHIS_TRANSFER_DATE;
		
		private System.Nullable<int> _USER_ID;
		
		private EntityRef<CONTRACT> _CONTRACT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_CONTChanging(System.Nullable<int> value);
    partial void OnID_CONTChanged();
    partial void OnCONTHIS_WEEKChanging(System.Nullable<int> value);
    partial void OnCONTHIS_WEEKChanged();
    partial void OnCONTHIS_TRANSFER_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCONTHIS_TRANSFER_DATEChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public CONTRACT_HISTORYWEEK()
		{
			this._CONTRACT = default(EntityRef<CONTRACT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CONT", DbType="Int")]
		public System.Nullable<int> ID_CONT
		{
			get
			{
				return this._ID_CONT;
			}
			set
			{
				if ((this._ID_CONT != value))
				{
					if (this._CONTRACT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CONTChanging(value);
					this.SendPropertyChanging();
					this._ID_CONT = value;
					this.SendPropertyChanged("ID_CONT");
					this.OnID_CONTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTHIS_WEEK", DbType="Int")]
		public System.Nullable<int> CONTHIS_WEEK
		{
			get
			{
				return this._CONTHIS_WEEK;
			}
			set
			{
				if ((this._CONTHIS_WEEK != value))
				{
					this.OnCONTHIS_WEEKChanging(value);
					this.SendPropertyChanging();
					this._CONTHIS_WEEK = value;
					this.SendPropertyChanged("CONTHIS_WEEK");
					this.OnCONTHIS_WEEKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CONTHIS_TRANSFER_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CONTHIS_TRANSFER_DATE
		{
			get
			{
				return this._CONTHIS_TRANSFER_DATE;
			}
			set
			{
				if ((this._CONTHIS_TRANSFER_DATE != value))
				{
					this.OnCONTHIS_TRANSFER_DATEChanging(value);
					this.SendPropertyChanging();
					this._CONTHIS_TRANSFER_DATE = value;
					this.SendPropertyChanged("CONTHIS_TRANSFER_DATE");
					this.OnCONTHIS_TRANSFER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CONTRACT_CONTRACT_HISTORYWEEK", Storage="_CONTRACT", ThisKey="ID_CONT", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public CONTRACT CONTRACT
		{
			get
			{
				return this._CONTRACT.Entity;
			}
			set
			{
				CONTRACT previousValue = this._CONTRACT.Entity;
				if (((previousValue != value) 
							|| (this._CONTRACT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CONTRACT.Entity = null;
						previousValue.CONTRACT_HISTORYWEEKs.Remove(this);
					}
					this._CONTRACT.Entity = value;
					if ((value != null))
					{
						value.CONTRACT_HISTORYWEEKs.Add(this);
						this._ID_CONT = value.ID;
					}
					else
					{
						this._ID_CONT = default(Nullable<int>);
					}
					this.SendPropertyChanged("CONTRACT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER")]
	public partial class CUSTOMER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CUS_FULLNAME;
		
		private string _CUS_CMND;
		
		private string _CUS_PHONE;
		
		private string _CUS_ADDRESS;
		
		private int _CUS_TYPE;
		
		private System.DateTime _CUS_CREATE_DATE;
		
		private System.Nullable<System.DateTime> _CUS_UPDATE_DATE;
		
		private System.Nullable<int> _USER_ID;
		
		private EntitySet<CUSTOMER_HISTORY> _CUSTOMER_HISTORies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCUS_FULLNAMEChanging(string value);
    partial void OnCUS_FULLNAMEChanged();
    partial void OnCUS_CMNDChanging(string value);
    partial void OnCUS_CMNDChanged();
    partial void OnCUS_PHONEChanging(string value);
    partial void OnCUS_PHONEChanged();
    partial void OnCUS_ADDRESSChanging(string value);
    partial void OnCUS_ADDRESSChanged();
    partial void OnCUS_TYPEChanging(int value);
    partial void OnCUS_TYPEChanged();
    partial void OnCUS_CREATE_DATEChanging(System.DateTime value);
    partial void OnCUS_CREATE_DATEChanged();
    partial void OnCUS_UPDATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCUS_UPDATE_DATEChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public CUSTOMER()
		{
			this._CUSTOMER_HISTORies = new EntitySet<CUSTOMER_HISTORY>(new Action<CUSTOMER_HISTORY>(this.attach_CUSTOMER_HISTORies), new Action<CUSTOMER_HISTORY>(this.detach_CUSTOMER_HISTORies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_FULLNAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string CUS_FULLNAME
		{
			get
			{
				return this._CUS_FULLNAME;
			}
			set
			{
				if ((this._CUS_FULLNAME != value))
				{
					this.OnCUS_FULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._CUS_FULLNAME = value;
					this.SendPropertyChanged("CUS_FULLNAME");
					this.OnCUS_FULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_CMND", DbType="NVarChar(100)")]
		public string CUS_CMND
		{
			get
			{
				return this._CUS_CMND;
			}
			set
			{
				if ((this._CUS_CMND != value))
				{
					this.OnCUS_CMNDChanging(value);
					this.SendPropertyChanging();
					this._CUS_CMND = value;
					this.SendPropertyChanged("CUS_CMND");
					this.OnCUS_CMNDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_PHONE", DbType="NVarChar(100)")]
		public string CUS_PHONE
		{
			get
			{
				return this._CUS_PHONE;
			}
			set
			{
				if ((this._CUS_PHONE != value))
				{
					this.OnCUS_PHONEChanging(value);
					this.SendPropertyChanging();
					this._CUS_PHONE = value;
					this.SendPropertyChanged("CUS_PHONE");
					this.OnCUS_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ADDRESS", DbType="NVarChar(500)")]
		public string CUS_ADDRESS
		{
			get
			{
				return this._CUS_ADDRESS;
			}
			set
			{
				if ((this._CUS_ADDRESS != value))
				{
					this.OnCUS_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._CUS_ADDRESS = value;
					this.SendPropertyChanged("CUS_ADDRESS");
					this.OnCUS_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_TYPE", DbType="Int NOT NULL")]
		public int CUS_TYPE
		{
			get
			{
				return this._CUS_TYPE;
			}
			set
			{
				if ((this._CUS_TYPE != value))
				{
					this.OnCUS_TYPEChanging(value);
					this.SendPropertyChanging();
					this._CUS_TYPE = value;
					this.SendPropertyChanged("CUS_TYPE");
					this.OnCUS_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_CREATE_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CUS_CREATE_DATE
		{
			get
			{
				return this._CUS_CREATE_DATE;
			}
			set
			{
				if ((this._CUS_CREATE_DATE != value))
				{
					this.OnCUS_CREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CUS_CREATE_DATE = value;
					this.SendPropertyChanged("CUS_CREATE_DATE");
					this.OnCUS_CREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_UPDATE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CUS_UPDATE_DATE
		{
			get
			{
				return this._CUS_UPDATE_DATE;
			}
			set
			{
				if ((this._CUS_UPDATE_DATE != value))
				{
					this.OnCUS_UPDATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CUS_UPDATE_DATE = value;
					this.SendPropertyChanged("CUS_UPDATE_DATE");
					this.OnCUS_UPDATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CUSTOMER_HISTORY", Storage="_CUSTOMER_HISTORies", ThisKey="ID", OtherKey="ID_CUS")]
		public EntitySet<CUSTOMER_HISTORY> CUSTOMER_HISTORies
		{
			get
			{
				return this._CUSTOMER_HISTORies;
			}
			set
			{
				this._CUSTOMER_HISTORies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CUSTOMER_HISTORies(CUSTOMER_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = this;
		}
		
		private void detach_CUSTOMER_HISTORies(CUSTOMER_HISTORY entity)
		{
			this.SendPropertyChanging();
			entity.CUSTOMER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER_HISTORY")]
	public partial class CUSTOMER_HISTORY : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _ID_CUS;
		
		private System.DateTime _CUSHIS_DATE;
		
		private int _CUSHIS_TYPE;
		
		private System.Nullable<int> _USER_ID;
		
		private EntityRef<CUSTOMER> _CUSTOMER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnID_CUSChanging(int value);
    partial void OnID_CUSChanged();
    partial void OnCUSHIS_DATEChanging(System.DateTime value);
    partial void OnCUSHIS_DATEChanged();
    partial void OnCUSHIS_TYPEChanging(int value);
    partial void OnCUSHIS_TYPEChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public CUSTOMER_HISTORY()
		{
			this._CUSTOMER = default(EntityRef<CUSTOMER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_CUS", DbType="Int NOT NULL")]
		public int ID_CUS
		{
			get
			{
				return this._ID_CUS;
			}
			set
			{
				if ((this._ID_CUS != value))
				{
					if (this._CUSTOMER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_CUSChanging(value);
					this.SendPropertyChanging();
					this._ID_CUS = value;
					this.SendPropertyChanged("ID_CUS");
					this.OnID_CUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSHIS_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime CUSHIS_DATE
		{
			get
			{
				return this._CUSHIS_DATE;
			}
			set
			{
				if ((this._CUSHIS_DATE != value))
				{
					this.OnCUSHIS_DATEChanging(value);
					this.SendPropertyChanging();
					this._CUSHIS_DATE = value;
					this.SendPropertyChanged("CUSHIS_DATE");
					this.OnCUSHIS_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUSHIS_TYPE", DbType="Int NOT NULL")]
		public int CUSHIS_TYPE
		{
			get
			{
				return this._CUSHIS_TYPE;
			}
			set
			{
				if ((this._CUSHIS_TYPE != value))
				{
					this.OnCUSHIS_TYPEChanging(value);
					this.SendPropertyChanging();
					this._CUSHIS_TYPE = value;
					this.SendPropertyChanged("CUSHIS_TYPE");
					this.OnCUSHIS_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CUSTOMER_CUSTOMER_HISTORY", Storage="_CUSTOMER", ThisKey="ID_CUS", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CUSTOMER CUSTOMER
		{
			get
			{
				return this._CUSTOMER.Entity;
			}
			set
			{
				CUSTOMER previousValue = this._CUSTOMER.Entity;
				if (((previousValue != value) 
							|| (this._CUSTOMER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CUSTOMER.Entity = null;
						previousValue.CUSTOMER_HISTORies.Remove(this);
					}
					this._CUSTOMER.Entity = value;
					if ((value != null))
					{
						value.CUSTOMER_HISTORies.Add(this);
						this._ID_CUS = value.ID;
					}
					else
					{
						this._ID_CUS = default(int);
					}
					this.SendPropertyChanged("CUSTOMER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CUSTOMER_NODELI")]
	public partial class CUSTOMER_NODELI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CUS_FULLNAME;
		
		private string _CUS_PHONE;
		
		private string _CUS_ADDRESS;
		
		private string _CUS_PRODUCT;
		
		private System.Nullable<System.DateTime> _CUS_CREATE_DATE;
		
		private System.Nullable<System.DateTime> _CUS_FAX_DATE;
		
		private string _EMP_BH;
		
		private string _EMP_XM;
		
		private string _NOTE_XM;
		
		private System.Nullable<int> _PROCESS_STATUS;
		
		private System.Nullable<int> _USER_ID;
		
		private System.Nullable<int> _CUS_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCUS_FULLNAMEChanging(string value);
    partial void OnCUS_FULLNAMEChanged();
    partial void OnCUS_PHONEChanging(string value);
    partial void OnCUS_PHONEChanged();
    partial void OnCUS_ADDRESSChanging(string value);
    partial void OnCUS_ADDRESSChanged();
    partial void OnCUS_PRODUCTChanging(string value);
    partial void OnCUS_PRODUCTChanged();
    partial void OnCUS_CREATE_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCUS_CREATE_DATEChanged();
    partial void OnCUS_FAX_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnCUS_FAX_DATEChanged();
    partial void OnEMP_BHChanging(string value);
    partial void OnEMP_BHChanged();
    partial void OnEMP_XMChanging(string value);
    partial void OnEMP_XMChanged();
    partial void OnNOTE_XMChanging(string value);
    partial void OnNOTE_XMChanged();
    partial void OnPROCESS_STATUSChanging(System.Nullable<int> value);
    partial void OnPROCESS_STATUSChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    partial void OnCUS_IDChanging(System.Nullable<int> value);
    partial void OnCUS_IDChanged();
    #endregion
		
		public CUSTOMER_NODELI()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_FULLNAME", DbType="NVarChar(150)")]
		public string CUS_FULLNAME
		{
			get
			{
				return this._CUS_FULLNAME;
			}
			set
			{
				if ((this._CUS_FULLNAME != value))
				{
					this.OnCUS_FULLNAMEChanging(value);
					this.SendPropertyChanging();
					this._CUS_FULLNAME = value;
					this.SendPropertyChanged("CUS_FULLNAME");
					this.OnCUS_FULLNAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_PHONE", DbType="NVarChar(150)")]
		public string CUS_PHONE
		{
			get
			{
				return this._CUS_PHONE;
			}
			set
			{
				if ((this._CUS_PHONE != value))
				{
					this.OnCUS_PHONEChanging(value);
					this.SendPropertyChanging();
					this._CUS_PHONE = value;
					this.SendPropertyChanged("CUS_PHONE");
					this.OnCUS_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ADDRESS", DbType="NVarChar(550)")]
		public string CUS_ADDRESS
		{
			get
			{
				return this._CUS_ADDRESS;
			}
			set
			{
				if ((this._CUS_ADDRESS != value))
				{
					this.OnCUS_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._CUS_ADDRESS = value;
					this.SendPropertyChanged("CUS_ADDRESS");
					this.OnCUS_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_PRODUCT", DbType="NVarChar(250)")]
		public string CUS_PRODUCT
		{
			get
			{
				return this._CUS_PRODUCT;
			}
			set
			{
				if ((this._CUS_PRODUCT != value))
				{
					this.OnCUS_PRODUCTChanging(value);
					this.SendPropertyChanging();
					this._CUS_PRODUCT = value;
					this.SendPropertyChanged("CUS_PRODUCT");
					this.OnCUS_PRODUCTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_CREATE_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CUS_CREATE_DATE
		{
			get
			{
				return this._CUS_CREATE_DATE;
			}
			set
			{
				if ((this._CUS_CREATE_DATE != value))
				{
					this.OnCUS_CREATE_DATEChanging(value);
					this.SendPropertyChanging();
					this._CUS_CREATE_DATE = value;
					this.SendPropertyChanged("CUS_CREATE_DATE");
					this.OnCUS_CREATE_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_FAX_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> CUS_FAX_DATE
		{
			get
			{
				return this._CUS_FAX_DATE;
			}
			set
			{
				if ((this._CUS_FAX_DATE != value))
				{
					this.OnCUS_FAX_DATEChanging(value);
					this.SendPropertyChanging();
					this._CUS_FAX_DATE = value;
					this.SendPropertyChanged("CUS_FAX_DATE");
					this.OnCUS_FAX_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_BH", DbType="VarChar(50)")]
		public string EMP_BH
		{
			get
			{
				return this._EMP_BH;
			}
			set
			{
				if ((this._EMP_BH != value))
				{
					this.OnEMP_BHChanging(value);
					this.SendPropertyChanging();
					this._EMP_BH = value;
					this.SendPropertyChanged("EMP_BH");
					this.OnEMP_BHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_XM", DbType="VarChar(50)")]
		public string EMP_XM
		{
			get
			{
				return this._EMP_XM;
			}
			set
			{
				if ((this._EMP_XM != value))
				{
					this.OnEMP_XMChanging(value);
					this.SendPropertyChanging();
					this._EMP_XM = value;
					this.SendPropertyChanged("EMP_XM");
					this.OnEMP_XMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOTE_XM", DbType="NVarChar(550)")]
		public string NOTE_XM
		{
			get
			{
				return this._NOTE_XM;
			}
			set
			{
				if ((this._NOTE_XM != value))
				{
					this.OnNOTE_XMChanging(value);
					this.SendPropertyChanging();
					this._NOTE_XM = value;
					this.SendPropertyChanged("NOTE_XM");
					this.OnNOTE_XMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROCESS_STATUS", DbType="Int")]
		public System.Nullable<int> PROCESS_STATUS
		{
			get
			{
				return this._PROCESS_STATUS;
			}
			set
			{
				if ((this._PROCESS_STATUS != value))
				{
					this.OnPROCESS_STATUSChanging(value);
					this.SendPropertyChanging();
					this._PROCESS_STATUS = value;
					this.SendPropertyChanged("PROCESS_STATUS");
					this.OnPROCESS_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CUS_ID", DbType="Int")]
		public System.Nullable<int> CUS_ID
		{
			get
			{
				return this._CUS_ID;
			}
			set
			{
				if ((this._CUS_ID != value))
				{
					this.OnCUS_IDChanging(value);
					this.SendPropertyChanging();
					this._CUS_ID = value;
					this.SendPropertyChanged("CUS_ID");
					this.OnCUS_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.EMPLOYER")]
	public partial class EMPLOYER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _EMP_NAME;
		
		private System.Nullable<int> _EMP_CHUCVU;
		
		private string _EMP_PHONE;
		
		private string _EMP_ADDRESS;
		
		private System.DateTime _EMP_DATE;
		
		private System.Nullable<int> _USER_ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnEMP_NAMEChanging(string value);
    partial void OnEMP_NAMEChanged();
    partial void OnEMP_CHUCVUChanging(System.Nullable<int> value);
    partial void OnEMP_CHUCVUChanged();
    partial void OnEMP_PHONEChanging(string value);
    partial void OnEMP_PHONEChanged();
    partial void OnEMP_ADDRESSChanging(string value);
    partial void OnEMP_ADDRESSChanged();
    partial void OnEMP_DATEChanging(System.DateTime value);
    partial void OnEMP_DATEChanged();
    partial void OnUSER_IDChanging(System.Nullable<int> value);
    partial void OnUSER_IDChanged();
    #endregion
		
		public EMPLOYER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_NAME", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string EMP_NAME
		{
			get
			{
				return this._EMP_NAME;
			}
			set
			{
				if ((this._EMP_NAME != value))
				{
					this.OnEMP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._EMP_NAME = value;
					this.SendPropertyChanged("EMP_NAME");
					this.OnEMP_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_CHUCVU", DbType="Int")]
		public System.Nullable<int> EMP_CHUCVU
		{
			get
			{
				return this._EMP_CHUCVU;
			}
			set
			{
				if ((this._EMP_CHUCVU != value))
				{
					this.OnEMP_CHUCVUChanging(value);
					this.SendPropertyChanging();
					this._EMP_CHUCVU = value;
					this.SendPropertyChanged("EMP_CHUCVU");
					this.OnEMP_CHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_PHONE", DbType="NVarChar(100)")]
		public string EMP_PHONE
		{
			get
			{
				return this._EMP_PHONE;
			}
			set
			{
				if ((this._EMP_PHONE != value))
				{
					this.OnEMP_PHONEChanging(value);
					this.SendPropertyChanging();
					this._EMP_PHONE = value;
					this.SendPropertyChanged("EMP_PHONE");
					this.OnEMP_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_ADDRESS", DbType="NVarChar(500)")]
		public string EMP_ADDRESS
		{
			get
			{
				return this._EMP_ADDRESS;
			}
			set
			{
				if ((this._EMP_ADDRESS != value))
				{
					this.OnEMP_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._EMP_ADDRESS = value;
					this.SendPropertyChanged("EMP_ADDRESS");
					this.OnEMP_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMP_DATE", DbType="SmallDateTime NOT NULL")]
		public System.DateTime EMP_DATE
		{
			get
			{
				return this._EMP_DATE;
			}
			set
			{
				if ((this._EMP_DATE != value))
				{
					this.OnEMP_DATEChanging(value);
					this.SendPropertyChanging();
					this._EMP_DATE = value;
					this.SendPropertyChanged("EMP_DATE");
					this.OnEMP_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", DbType="Int")]
		public System.Nullable<int> USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[GROUP]")]
	public partial class GROUP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GROUP_ID;
		
		private string _GROUP_NAME;
		
		private System.Nullable<int> _GROUP_TYPE;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_IDChanging(int value);
    partial void OnGROUP_IDChanged();
    partial void OnGROUP_NAMEChanging(string value);
    partial void OnGROUP_NAMEChanged();
    partial void OnGROUP_TYPEChanging(System.Nullable<int> value);
    partial void OnGROUP_TYPEChanged();
    #endregion
		
		public GROUP()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_NAME", DbType="NVarChar(400)")]
		public string GROUP_NAME
		{
			get
			{
				return this._GROUP_NAME;
			}
			set
			{
				if ((this._GROUP_NAME != value))
				{
					this.OnGROUP_NAMEChanging(value);
					this.SendPropertyChanging();
					this._GROUP_NAME = value;
					this.SendPropertyChanged("GROUP_NAME");
					this.OnGROUP_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_TYPE", DbType="Int")]
		public System.Nullable<int> GROUP_TYPE
		{
			get
			{
				return this._GROUP_TYPE;
			}
			set
			{
				if ((this._GROUP_TYPE != value))
				{
					this.OnGROUP_TYPEChanging(value);
					this.SendPropertyChanging();
					this._GROUP_TYPE = value;
					this.SendPropertyChanged("GROUP_TYPE");
					this.OnGROUP_TYPEChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GROUP_MENU")]
	public partial class GROUP_MENU : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GROUP_MENU_ID;
		
		private System.Nullable<int> _MENU_ID;
		
		private System.Nullable<int> _GROUP_ID;
		
		private System.Nullable<int> _ORDER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGROUP_MENU_IDChanging(int value);
    partial void OnGROUP_MENU_IDChanged();
    partial void OnMENU_IDChanging(System.Nullable<int> value);
    partial void OnMENU_IDChanged();
    partial void OnGROUP_IDChanging(System.Nullable<int> value);
    partial void OnGROUP_IDChanged();
    partial void OnORDERChanging(System.Nullable<int> value);
    partial void OnORDERChanged();
    #endregion
		
		public GROUP_MENU()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_MENU_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GROUP_MENU_ID
		{
			get
			{
				return this._GROUP_MENU_ID;
			}
			set
			{
				if ((this._GROUP_MENU_ID != value))
				{
					this.OnGROUP_MENU_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_MENU_ID = value;
					this.SendPropertyChanged("GROUP_MENU_ID");
					this.OnGROUP_MENU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_ID", DbType="Int")]
		public System.Nullable<int> MENU_ID
		{
			get
			{
				return this._MENU_ID;
			}
			set
			{
				if ((this._MENU_ID != value))
				{
					this.OnMENU_IDChanging(value);
					this.SendPropertyChanging();
					this._MENU_ID = value;
					this.SendPropertyChanged("MENU_ID");
					this.OnMENU_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", DbType="Int")]
		public System.Nullable<int> GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ORDER]", Storage="_ORDER", DbType="Int")]
		public System.Nullable<int> ORDER
		{
			get
			{
				return this._ORDER;
			}
			set
			{
				if ((this._ORDER != value))
				{
					this.OnORDERChanging(value);
					this.SendPropertyChanging();
					this._ORDER = value;
					this.SendPropertyChanged("ORDER");
					this.OnORDERChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MENU_PARENT")]
	public partial class MENU_PARENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MENU_PAR_ID;
		
		private string _MENU_NAME;
		
		private System.Nullable<int> _MENU_PAR_ACTIVE;
		
		private System.Nullable<int> _MENU_RANK;
		
		private System.Nullable<int> _MENU_PARENT1;
		
		private string _MENU_PARENT_LINK;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMENU_PAR_IDChanging(int value);
    partial void OnMENU_PAR_IDChanged();
    partial void OnMENU_NAMEChanging(string value);
    partial void OnMENU_NAMEChanged();
    partial void OnMENU_PAR_ACTIVEChanging(System.Nullable<int> value);
    partial void OnMENU_PAR_ACTIVEChanged();
    partial void OnMENU_RANKChanging(System.Nullable<int> value);
    partial void OnMENU_RANKChanged();
    partial void OnMENU_PARENT1Changing(System.Nullable<int> value);
    partial void OnMENU_PARENT1Changed();
    partial void OnMENU_PARENT_LINKChanging(string value);
    partial void OnMENU_PARENT_LINKChanged();
    #endregion
		
		public MENU_PARENT()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_PAR_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MENU_PAR_ID
		{
			get
			{
				return this._MENU_PAR_ID;
			}
			set
			{
				if ((this._MENU_PAR_ID != value))
				{
					this.OnMENU_PAR_IDChanging(value);
					this.SendPropertyChanging();
					this._MENU_PAR_ID = value;
					this.SendPropertyChanged("MENU_PAR_ID");
					this.OnMENU_PAR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_NAME", DbType="NVarChar(550)")]
		public string MENU_NAME
		{
			get
			{
				return this._MENU_NAME;
			}
			set
			{
				if ((this._MENU_NAME != value))
				{
					this.OnMENU_NAMEChanging(value);
					this.SendPropertyChanging();
					this._MENU_NAME = value;
					this.SendPropertyChanged("MENU_NAME");
					this.OnMENU_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_PAR_ACTIVE", DbType="Int")]
		public System.Nullable<int> MENU_PAR_ACTIVE
		{
			get
			{
				return this._MENU_PAR_ACTIVE;
			}
			set
			{
				if ((this._MENU_PAR_ACTIVE != value))
				{
					this.OnMENU_PAR_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._MENU_PAR_ACTIVE = value;
					this.SendPropertyChanged("MENU_PAR_ACTIVE");
					this.OnMENU_PAR_ACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_RANK", DbType="Int")]
		public System.Nullable<int> MENU_RANK
		{
			get
			{
				return this._MENU_RANK;
			}
			set
			{
				if ((this._MENU_RANK != value))
				{
					this.OnMENU_RANKChanging(value);
					this.SendPropertyChanging();
					this._MENU_RANK = value;
					this.SendPropertyChanged("MENU_RANK");
					this.OnMENU_RANKChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="MENU_PARENT", Storage="_MENU_PARENT1", DbType="Int")]
		public System.Nullable<int> MENU_PARENT1
		{
			get
			{
				return this._MENU_PARENT1;
			}
			set
			{
				if ((this._MENU_PARENT1 != value))
				{
					this.OnMENU_PARENT1Changing(value);
					this.SendPropertyChanging();
					this._MENU_PARENT1 = value;
					this.SendPropertyChanged("MENU_PARENT1");
					this.OnMENU_PARENT1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MENU_PARENT_LINK", DbType="NVarChar(250)")]
		public string MENU_PARENT_LINK
		{
			get
			{
				return this._MENU_PARENT_LINK;
			}
			set
			{
				if ((this._MENU_PARENT_LINK != value))
				{
					this.OnMENU_PARENT_LINKChanging(value);
					this.SendPropertyChanging();
					this._MENU_PARENT_LINK = value;
					this.SendPropertyChanged("MENU_PARENT_LINK");
					this.OnMENU_PARENT_LINKChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[USER]")]
	public partial class USER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _USER_ID;
		
		private string _USER_NAME;
		
		private string _USER_UN;
		
		private string _USER_PW;
		
		private System.Nullable<int> _USER_TYPE;
		
		private string _SALT;
		
		private string _USER_EMAIL;
		
		private string _USER_ADDRESS;
		
		private string _USER_PHONE;
		
		private System.Nullable<System.DateTime> _USER_DATE;
		
		private System.Nullable<int> _GROUP_ID;
		
		private System.Nullable<int> _USER_ACTIVE;
		
		private System.Nullable<int> _USER_THEM;
		
		private System.Nullable<int> _USER_SUA;
		
		private System.Nullable<int> _USER_XOA;
		
		private System.Nullable<int> _USER_CAPNHAT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUSER_IDChanging(int value);
    partial void OnUSER_IDChanged();
    partial void OnUSER_NAMEChanging(string value);
    partial void OnUSER_NAMEChanged();
    partial void OnUSER_UNChanging(string value);
    partial void OnUSER_UNChanged();
    partial void OnUSER_PWChanging(string value);
    partial void OnUSER_PWChanged();
    partial void OnUSER_TYPEChanging(System.Nullable<int> value);
    partial void OnUSER_TYPEChanged();
    partial void OnSALTChanging(string value);
    partial void OnSALTChanged();
    partial void OnUSER_EMAILChanging(string value);
    partial void OnUSER_EMAILChanged();
    partial void OnUSER_ADDRESSChanging(string value);
    partial void OnUSER_ADDRESSChanged();
    partial void OnUSER_PHONEChanging(string value);
    partial void OnUSER_PHONEChanged();
    partial void OnUSER_DATEChanging(System.Nullable<System.DateTime> value);
    partial void OnUSER_DATEChanged();
    partial void OnGROUP_IDChanging(System.Nullable<int> value);
    partial void OnGROUP_IDChanged();
    partial void OnUSER_ACTIVEChanging(System.Nullable<int> value);
    partial void OnUSER_ACTIVEChanged();
    partial void OnUSER_THEMChanging(System.Nullable<int> value);
    partial void OnUSER_THEMChanged();
    partial void OnUSER_SUAChanging(System.Nullable<int> value);
    partial void OnUSER_SUAChanged();
    partial void OnUSER_XOAChanging(System.Nullable<int> value);
    partial void OnUSER_XOAChanged();
    partial void OnUSER_CAPNHATChanging(System.Nullable<int> value);
    partial void OnUSER_CAPNHATChanged();
    #endregion
		
		public USER()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int USER_ID
		{
			get
			{
				return this._USER_ID;
			}
			set
			{
				if ((this._USER_ID != value))
				{
					this.OnUSER_IDChanging(value);
					this.SendPropertyChanging();
					this._USER_ID = value;
					this.SendPropertyChanged("USER_ID");
					this.OnUSER_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_NAME", DbType="NVarChar(100)")]
		public string USER_NAME
		{
			get
			{
				return this._USER_NAME;
			}
			set
			{
				if ((this._USER_NAME != value))
				{
					this.OnUSER_NAMEChanging(value);
					this.SendPropertyChanging();
					this._USER_NAME = value;
					this.SendPropertyChanged("USER_NAME");
					this.OnUSER_NAMEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_UN", DbType="VarChar(50)")]
		public string USER_UN
		{
			get
			{
				return this._USER_UN;
			}
			set
			{
				if ((this._USER_UN != value))
				{
					this.OnUSER_UNChanging(value);
					this.SendPropertyChanging();
					this._USER_UN = value;
					this.SendPropertyChanged("USER_UN");
					this.OnUSER_UNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PW", DbType="VarChar(50)")]
		public string USER_PW
		{
			get
			{
				return this._USER_PW;
			}
			set
			{
				if ((this._USER_PW != value))
				{
					this.OnUSER_PWChanging(value);
					this.SendPropertyChanging();
					this._USER_PW = value;
					this.SendPropertyChanged("USER_PW");
					this.OnUSER_PWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_TYPE", DbType="Int")]
		public System.Nullable<int> USER_TYPE
		{
			get
			{
				return this._USER_TYPE;
			}
			set
			{
				if ((this._USER_TYPE != value))
				{
					this.OnUSER_TYPEChanging(value);
					this.SendPropertyChanging();
					this._USER_TYPE = value;
					this.SendPropertyChanged("USER_TYPE");
					this.OnUSER_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SALT", DbType="VarChar(50)")]
		public string SALT
		{
			get
			{
				return this._SALT;
			}
			set
			{
				if ((this._SALT != value))
				{
					this.OnSALTChanging(value);
					this.SendPropertyChanging();
					this._SALT = value;
					this.SendPropertyChanged("SALT");
					this.OnSALTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_EMAIL", DbType="NVarChar(400)")]
		public string USER_EMAIL
		{
			get
			{
				return this._USER_EMAIL;
			}
			set
			{
				if ((this._USER_EMAIL != value))
				{
					this.OnUSER_EMAILChanging(value);
					this.SendPropertyChanging();
					this._USER_EMAIL = value;
					this.SendPropertyChanged("USER_EMAIL");
					this.OnUSER_EMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ADDRESS", DbType="NVarChar(400)")]
		public string USER_ADDRESS
		{
			get
			{
				return this._USER_ADDRESS;
			}
			set
			{
				if ((this._USER_ADDRESS != value))
				{
					this.OnUSER_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._USER_ADDRESS = value;
					this.SendPropertyChanged("USER_ADDRESS");
					this.OnUSER_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PHONE", DbType="NVarChar(400)")]
		public string USER_PHONE
		{
			get
			{
				return this._USER_PHONE;
			}
			set
			{
				if ((this._USER_PHONE != value))
				{
					this.OnUSER_PHONEChanging(value);
					this.SendPropertyChanging();
					this._USER_PHONE = value;
					this.SendPropertyChanged("USER_PHONE");
					this.OnUSER_PHONEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_DATE", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> USER_DATE
		{
			get
			{
				return this._USER_DATE;
			}
			set
			{
				if ((this._USER_DATE != value))
				{
					this.OnUSER_DATEChanging(value);
					this.SendPropertyChanging();
					this._USER_DATE = value;
					this.SendPropertyChanged("USER_DATE");
					this.OnUSER_DATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GROUP_ID", DbType="Int")]
		public System.Nullable<int> GROUP_ID
		{
			get
			{
				return this._GROUP_ID;
			}
			set
			{
				if ((this._GROUP_ID != value))
				{
					this.OnGROUP_IDChanging(value);
					this.SendPropertyChanging();
					this._GROUP_ID = value;
					this.SendPropertyChanged("GROUP_ID");
					this.OnGROUP_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ACTIVE", DbType="Int")]
		public System.Nullable<int> USER_ACTIVE
		{
			get
			{
				return this._USER_ACTIVE;
			}
			set
			{
				if ((this._USER_ACTIVE != value))
				{
					this.OnUSER_ACTIVEChanging(value);
					this.SendPropertyChanging();
					this._USER_ACTIVE = value;
					this.SendPropertyChanged("USER_ACTIVE");
					this.OnUSER_ACTIVEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_THEM", DbType="Int")]
		public System.Nullable<int> USER_THEM
		{
			get
			{
				return this._USER_THEM;
			}
			set
			{
				if ((this._USER_THEM != value))
				{
					this.OnUSER_THEMChanging(value);
					this.SendPropertyChanging();
					this._USER_THEM = value;
					this.SendPropertyChanged("USER_THEM");
					this.OnUSER_THEMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_SUA", DbType="Int")]
		public System.Nullable<int> USER_SUA
		{
			get
			{
				return this._USER_SUA;
			}
			set
			{
				if ((this._USER_SUA != value))
				{
					this.OnUSER_SUAChanging(value);
					this.SendPropertyChanging();
					this._USER_SUA = value;
					this.SendPropertyChanged("USER_SUA");
					this.OnUSER_SUAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_XOA", DbType="Int")]
		public System.Nullable<int> USER_XOA
		{
			get
			{
				return this._USER_XOA;
			}
			set
			{
				if ((this._USER_XOA != value))
				{
					this.OnUSER_XOAChanging(value);
					this.SendPropertyChanging();
					this._USER_XOA = value;
					this.SendPropertyChanged("USER_XOA");
					this.OnUSER_XOAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_CAPNHAT", DbType="Int")]
		public System.Nullable<int> USER_CAPNHAT
		{
			get
			{
				return this._USER_CAPNHAT;
			}
			set
			{
				if ((this._USER_CAPNHAT != value))
				{
					this.OnUSER_CAPNHATChanging(value);
					this.SendPropertyChanging();
					this._USER_CAPNHAT = value;
					this.SendPropertyChanged("USER_CAPNHAT");
					this.OnUSER_CAPNHATChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
